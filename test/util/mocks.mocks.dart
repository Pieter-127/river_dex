// Mocks generated by Mockito 5.4.4 from annotations
// in river_dex/test/util/mocks.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:mockito/mockito.dart' as _i1;
import 'package:river_dex/data/api_service.dart' as _i4;
import 'package:river_dex/data/dto/pokemon_dto.dart' as _i3;
import 'package:river_dex/data/dto/pokemon_list_dto.dart' as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakePokemonListDto_0 extends _i1.SmartFake
    implements _i2.PokemonListDto {
  _FakePokemonListDto_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakePokemonDto_1 extends _i1.SmartFake implements _i3.PokemonDto {
  _FakePokemonDto_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [ApiService].
///
/// See the documentation for Mockito's code generation for more information.
class MockApiService extends _i1.Mock implements _i4.ApiService {
  MockApiService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<_i2.PokemonListDto> getPokemonList(int? limit) =>
      (super.noSuchMethod(
        Invocation.method(
          #getPokemonList,
          [limit],
        ),
        returnValue: _i5.Future<_i2.PokemonListDto>.value(_FakePokemonListDto_0(
          this,
          Invocation.method(
            #getPokemonList,
            [limit],
          ),
        )),
      ) as _i5.Future<_i2.PokemonListDto>);

  @override
  _i5.Future<_i3.PokemonDto> getPokemonInfo(String? pokemonName) =>
      (super.noSuchMethod(
        Invocation.method(
          #getPokemonInfo,
          [pokemonName],
        ),
        returnValue: _i5.Future<_i3.PokemonDto>.value(_FakePokemonDto_1(
          this,
          Invocation.method(
            #getPokemonInfo,
            [pokemonName],
          ),
        )),
      ) as _i5.Future<_i3.PokemonDto>);
}
